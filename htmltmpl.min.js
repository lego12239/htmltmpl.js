/* Version 0.2.0 , for copyright see LICENSE file */
  {  "use strict";   function htmltmpl(tmpl, prms) {  this.p = {};  this.data = [];  this.match = {};  this.tmpl = [];  this.priv = [];    this.phrases = [[ { phrase: "<%TMPL_VAR NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2 },  { phrase: "&lt;%TMPL_VAR NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2 },  { phrase: "&LT;%TMPL_VAR NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2 },  { phrase: "<!--%TMPL_VAR NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2 },  { phrase: "<%TMPL_LOOP NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2 },  { phrase: "&lt;%TMPL_LOOP NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2 },  { phrase: "&LT;%TMPL_LOOP NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2 },  { phrase: "<!--%TMPL_LOOP NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2 },  { phrase: "<%/TMPL_LOOP%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_end },  { phrase: "&lt;%/TMPL_LOOP%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_end },  { phrase: "&LT;%/TMPL_LOOP%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_end },  { phrase: "<!--%/TMPL_LOOP%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_end },  { phrase: "&lt;--%/TMPL_LOOP%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_end },  { phrase: "<%TMPL_IF NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2 },  { phrase: "&lt;%TMPL_IF NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2 },  { phrase: "&LT;%TMPL_IF NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2 },  { phrase: "<!--%TMPL_IF NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2 },  { phrase: "&lt;--%TMPL_IF NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2 },  { phrase: "<%/TMPL_IF%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&lt;%/TMPL_IF%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&LT;%/TMPL_IF%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "<!--%/TMPL_IF%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&lt;--%/TMPL_IF%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "<%TMPL_UNLESS NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_unless_1_2 },  { phrase: "&lt;%TMPL_UNLESS NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_unless_1_2 },  { phrase: "&LT;%TMPL_UNLESS NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_unless_1_2 },  { phrase: "<!--%TMPL_UNLESS NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_unless_1_2 },  { phrase: "&lt;--%TMPL_UNLESS NAME=",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_unless_1_2 },  { phrase: "<%/TMPL_UNLESS%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&lt;%/TMPL_UNLESS%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&LT;%/TMPL_UNLESS%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "<!--%/TMPL_UNLESS%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "&lt;--%/TMPL_UNLESS%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_end },  { phrase: "<%TMPL_ELSE%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&lt;%TMPL_ELSE%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&LT;%TMPL_ELSE%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "<!--%TMPL_ELSE%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&lt;--%TMPL_ELSE%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else } ]];  if ( typeof(tmpl) === "undefined" ) {  this.tmpl[0] = { str: "" };  } else if ( typeof(tmpl) === "string" ) {  this.tmpl[0] = { str: tmpl };  } else if ( typeof(tmpl) === "object" ) {  this.tmpl[0] = { str: tmpl.innerHTML };  }   this.tmpl[0].pos = [{ cur: 0,  start: 0 }];  this.p.ph_case_sensitive = 1;  this.p.global_vars = 0;  this.p.loop_context_vars = 0;  this.p.tmpl_is_commented = 0;  if ( prms != undefined ) {  if ( prms.ph_case_sensitive != undefined )  this.p.ph_case_sensitive = prms.ph_case_sensitive;  if ( prms.global_vars != undefined )  this.p.global_vars = prms.global_vars;  if ( prms.loop_context_vars != undefined )  this.p.loop_context_vars = prms.loop_context_vars;  if ( prms.tmpl_is_commented != undefined ) {  this.p.tmpl_is_commented = prms.tmpl_is_commented;    this.phrases.unshift([ { phrase: "<!--",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_enclosing_comment_start } ]);  }  }      this.hdlrs = [{ hdlr_0_1: this.def_hdlr_0_1,  hdlr_1_0: this.def_hdlr_1_0,  hdlr_1_2: this.def_hdlr_1_2 }];   this._match_reset(); }  ; htmltmpl.prototype._match_reset = function () {  var i;      this.match.state = 0;    this.match.ph_chr_idx = 0;  this.match.phrase_idx = -1;  this.match.str = new String();  this.match.phrases_cnt = this.phrases[0].length;  for(i = 0; i < this.phrases[0].length; i++)  this.phrases[0][i].is_match = 1; }  ; htmltmpl.prototype.set_state = function (newstate) {  var oldstate = this.match.state;    this.match.state = newstate;  switch (oldstate) {  case 0:  switch (this.match.state) {  case 0:  if ( typeof(this.hdlrs[0].hdlr_0_0) === "function" )  this.hdlrs[0].hdlr_0_0.call(this);  else  this.def_hdlr_0_0();  break;  case 1:  if ( typeof(this.hdlrs[0].hdlr_0_1) === "function" )  this.hdlrs[0].hdlr_0_1.call(this);  else  this.def_hdlr_0_1();  break;  case 2:  if ( typeof(this.hdlrs[0].hdlr_0_2) === "function" )  this.hdlrs[0].hdlr_0_2.call(this);  else  alert("Error: cann't handle a state change from 0 to 2");  return;  }  break;  case 1:  switch (this.match.state) {  case 0:  if ( typeof(this.hdlrs[0].hdlr_1_0) === "function" )  this.hdlrs[0].hdlr_1_0.call(this);  else  this.def_hdlr_1_0();  break;  case 2:  if ( typeof(this.hdlrs[0].hdlr_1_2) === "function" )  this.hdlrs[0].hdlr_1_2.call(this);  else  this.def_hdlr_1_2();  break;  }  break;  case 2:  } }  ; htmltmpl.prototype.phrases_match = function (char) {  var i;  var chr;    if ( this.p.ph_case_sensitive )  chr = char;  else  chr = char.toUpperCase();     for(i = 0; i < this.phrases[0].length; i++) {  if ( ! this.phrases[0][i].is_match )  continue;  if ( this.phrases[0][i].phrase.charAt(this.match.ph_chr_idx) != chr ) {  this.phrases[0][i].is_match = 0;  this.match.phrases_cnt--;  } else {  if ( this.phrases[0][i].phrase.length == (this.match.ph_chr_idx + 1) ) {  this.match.phrase_idx = i;  return 2;  }  }  }  if ( this.match.phrases_cnt ) {  this.match.ph_chr_idx++;  this.match.str += char;  return 1;  } else {  return 0;  } }  ; htmltmpl.prototype.apply = function(data) {  var str;  var out_el;    this.out_str = new String();  this.data.unshift(data);   for (;  this.tmpl[0].pos[0].cur < this.tmpl[0].str.length;  this.tmpl[0].pos[0].cur++ ) {  switch (this.match.state) {  case 0:  res = this.phrases_match(this.tmpl[0].str.charAt(this.tmpl[0].pos[0].cur));  this.set_state(res);  break;  case 1:  res = this.phrases_match(this.tmpl[0].str.charAt(this.tmpl[0].pos[0].cur));  this.set_state(res);  break;  case 2:  break;  }  }     this.out_str += this.tmpl[0].str.substring(this.tmpl[0].pos[0].start, this.tmpl[0].pos[0].cur);  out_el = $.parseHTML(this.out_str);   if ( out_el.length == 1 )  return out_el[0];  else  return out_el; }    ; htmltmpl.prototype.def_hdlr_0_0 = function () {   this._match_reset(); }  ; htmltmpl.prototype.def_hdlr_0_1 = function () {   this.out_str += this.tmpl[0].str.substring(this.tmpl[0].pos[0].start, this.tmpl[0].pos[0].cur); }  ; htmltmpl.prototype.def_hdlr_1_0 = function () {    this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur;   this.out_str += this.match.str;  this._match_reset(); }  ; htmltmpl.prototype.def_hdlr_1_2 = function () {   if ( typeof(this.phrases[0][this.match.phrase_idx].hdlr_1_2) === "function" )  this.phrases[0][this.match.phrase_idx].hdlr_1_2.call(this); }     ; htmltmpl.prototype.hdlr_enclosing_comment_start = function () {   this.phrases.shift();  this.phrases[0].unshift({ phrase: "-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_enclosing_comment_end });  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_enclosing_comment_end = function () {    this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }     ; htmltmpl.prototype.hdlr_tmpl_var_1_2 = function () {   this.phrases.unshift([ { phrase: "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2_tail },  { phrase: "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2_tail },  { phrase: "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2_tail },  { phrase: "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_var_1_2_tail } ]);   this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_var_0_1,  hdlr_1_0: this.hdlr_tmpl_var_1_0 });  this.priv.unshift({ varname: new String() });  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_var_0_1 = function () {  this.priv[0].varname += this.tmpl[0].str.substring(this.tmpl[0].pos[0].start, this.tmpl[0].pos[0].cur);  }  ; htmltmpl.prototype.hdlr_tmpl_var_1_0 = function () {  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur;  this.priv[0].varname += this.match.str;  }  ; htmltmpl.prototype.hdlr_tmpl_var_1_2_tail = function () {   var i;  var len;    if ( this.p.global_vars )  len = this.data.length;  else  len = 1;   for(i = 0; i < len; i++) {  if ( this.data[i][this.priv[0].varname] != undefined ) {  this.out_str += this.data[i][this.priv[0].varname];  break;  }  }  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this.priv.shift();  this.phrases.shift();  this.hdlrs.shift();   this._match_reset(); }    ; htmltmpl.prototype.hdlr_tmpl_loop_1_2 = function () {  this.phrases.unshift([ { phrase: "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_tail },  { phrase: "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_tail },  { phrase: "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_tail },  { phrase: "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_tail },  { phrase: "%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_tail } ]);   this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_loop_0_1,  hdlr_1_0: this.hdlr_tmpl_loop_1_0 });  this.priv.unshift({ loopname: new String() });  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_loop_0_1 = function () {  this.priv[0].loopname += this.tmpl[0].str.substring(this.tmpl[0].pos[0].start, this.tmpl[0].pos[0].cur);  }  ; htmltmpl.prototype.hdlr_tmpl_loop_1_0 = function () {  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur;  this.priv[0].loopname += this.match.str;  }  ; htmltmpl.prototype.set_loop_context_vars = function () {  if ( this.priv[0].loop == undefined ) {  alert("set_loop_context_vars() is called outside a loop.");  return;  }     this.data[0].__first__ = 0;  this.data[0].__last__ = 0;  this.data[0].__inner__ = 0;  this.data[0].__outer__ = 0;     if ( this.priv[0].loopidx == 0 ) {  this.data[0].__first__ = 1;  this.data[0].__outer__ = 1;  }  if ( this.priv[0].loopidx == (this.priv[0].loop.length - 1) ) {  this.data[0].__last__ = 1;  this.data[0].__outer__ = 1;  }   if ( ! this.data[0].__outer__ )  this.data[0].__inner__ = 1;   if ( (this.priv[0].loopidx + 1) % 2 == 0 ) {  this.data[0].__odd__ = 0;  this.data[0].__even__ = 1;  } else {  this.data[0].__odd__ = 1;  this.data[0].__even__ = 0;  }   this.data[0].__index__ = this.priv[0].loopidx;  this.data[0].__counter__ = this.priv[0].loopidx + 1; }  ; htmltmpl.prototype.hdlr_tmpl_loop_1_2_tail = function () {  var loop;     this.phrases.shift();  this.hdlrs.shift();     if ( this.p.global_vars )  len = this.data.length;  else  len = 1;   for(i = 0; i < len; i++) {  if ( this.data[i][this.priv[0].loopname] != undefined ) {  if (( typeof(this.data[i][this.priv[0].loopname]) === "object" ) &&  ( this.data[i][this.priv[0].loopname] instanceof Array ))  loop = this.data[i][this.priv[0].loopname];  break;  }  }   if ( loop == undefined ) {  this.priv.shift();  this.phrases.unshift([ { phrase: "<%/TMPL_LOOP%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_eat },  { phrase: "&lt;%/TMPL_LOOP%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_eat },  { phrase: "&LT;%/TMPL_LOOP%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_eat },  { phrase: "<!--%/TMPL_LOOP%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_eat },  { phrase: "&lt;--%/TMPL_LOOP%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_loop_1_2_eat } ]);  this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_loop_eat,  hdlr_1_0: this.hdlr_tmpl_loop_eat });  this._match_reset();  return;  }  this.priv.shift();   this.priv.unshift({ loop: loop,  loopidx: 0 });  this.data.unshift(loop[0]);   if ( this.p.loop_context_vars )  this.set_loop_context_vars();   this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;  this.tmpl[0].pos.unshift({ cur: this.tmpl[0].pos[0].cur,  start: this.tmpl[0].pos[0].start });   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_loop_eat = function () {  return; }  ; htmltmpl.prototype.hdlr_tmpl_loop_1_2_eat = function () {   this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this.phrases.shift();  this.hdlrs.shift();   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_loop_1_2_end = function () {  var pcur, pstart;      this.priv[0].loopidx++;    if ( this.priv[0].loopidx == this.priv[0].loop.length ) {  pcur = this.tmpl[0].pos[0].cur;  pstart = pcur + 1;  this.tmpl[0].pos.shift();  this.tmpl[0].pos[0].cur = pcur;  this.tmpl[0].pos[0].start = pstart;  this.data.shift();  this.priv.shift();  this._match_reset();  return;  }     this.data.shift();  this.data.unshift(this.priv[0].loop[this.priv[0].loopidx]);   if ( this.p.loop_context_vars )  this.set_loop_context_vars();   this.tmpl[0].pos[0].cur = this.tmpl[0].pos[1].cur;  this.tmpl[0].pos[0].start = this.tmpl[0].pos[1].start;   this._match_reset(); }    ; htmltmpl.prototype.hdlr_tmpl_if_1_2 = function () {   this.phrases.unshift([ { phrase: "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail } ]);   this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_if_0_1,  hdlr_1_0: this.hdlr_tmpl_if_1_0 });  this.priv.unshift({ phrase: "if",  varname: new String() });  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_unless_1_2 = function () {   this.phrases.unshift([ { phrase: "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail },  { phrase: "%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_tail } ]);   this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_if_0_1,  hdlr_1_0: this.hdlr_tmpl_if_1_0 });  this.priv.unshift({ phrase: "unless",  varname: new String() });  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_if_0_1 = function () {  this.priv[0].varname += this.tmpl[0].str.substring(this.tmpl[0].pos[0].start, this.tmpl[0].pos[0].cur);  }  ; htmltmpl.prototype.hdlr_tmpl_if_1_0 = function () {  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur;  this.priv[0].varname += this.match.str;  }  ; htmltmpl.prototype.hdlr_tmpl_if_1_2_tail = function () {  var varname;  var i;  var len;  var phrase;     this.phrases.shift();  this.hdlrs.shift();   if ( this.p.global_vars )  len = this.data.length;  else  len = 1;   this.priv[0].var_is_true = 0;  for(i = 0; i < len; i++) {  if ( this.data[i][this.priv[0].varname] != undefined ) {  if ( this.data[i][this.priv[0].varname] )  this.priv[0].var_is_true = 1;  break;  }  }   if ((( this.priv[0].phrase == "if" ) && ( ! this.priv[0].var_is_true )) ||  (( this.priv[0].phrase == "unless" ) && ( this.priv[0].var_is_true ))) {  if ( this.priv[0].phrase == "if" )  phrase = "TMPL_IF";  else  phrase = "TMPL_UNLESS";  this.phrases.unshift([ { phrase: "<%/" + phrase + "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&lt;%/" + phrase + "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&LT;%/" + phrase + "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "<!--%/" + phrase + "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&lt;--%/" + phrase + "%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "<%TMPL_ELSE%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&lt;%TMPL_ELSE%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&LT;%TMPL_ELSE%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "<!--%TMPL_ELSE%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else },  { phrase: "&lt;--%TMPL_ELSE%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_else } ]);  this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_if_eat,  hdlr_1_0: this.hdlr_tmpl_if_eat });  this._match_reset();  return;  }   this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_if_eat = function () {  return; }  ; htmltmpl.prototype.hdlr_tmpl_if_1_2_eat = function () {   this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this.priv.shift();  this.phrases.shift();  this.hdlrs.shift();   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_if_1_2_else = function () {  var phrase;      if ((( this.priv[0].phrase == "if" ) && ( this.priv[0].var_is_true )) ||  (( this.priv[0].phrase == "unless" ) && ( ! this.priv[0].var_is_true ))) {  if ( this.priv[0].phrase == "if" )  phrase = "TMPL_IF";  else  phrase = "TMPL_UNLESS";  this.phrases.unshift([ { phrase: "<%/" + phrase + "%>",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&lt;%/" + phrase + "%&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&LT;%/" + phrase + "%&GT;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "<!--%/" + phrase + "%-->",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat },  { phrase: "&lt;--%/" + phrase + "%--&gt;",  is_match: 1,  oref: this,  hdlr_1_2: this.hdlr_tmpl_if_1_2_eat } ]);  this.hdlrs.unshift({ hdlr_0_1: this.hdlr_tmpl_if_eat,  hdlr_1_0: this.hdlr_tmpl_if_eat });  this._match_reset();  return;  }  this.phrases.shift();  this.hdlrs.shift();   this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;   this._match_reset(); }  ; htmltmpl.prototype.hdlr_tmpl_if_1_2_end = function () {    if (( this.priv[0].phrase == "if" ) ||  ( this.priv[0].phrase == "unless" )) {  this.priv.shift();  this.tmpl[0].pos[0].start = this.tmpl[0].pos[0].cur + 1;  this._match_reset();  return;  } }  } 